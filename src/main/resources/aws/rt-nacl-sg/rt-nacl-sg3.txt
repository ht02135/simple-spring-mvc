

https://www.tufin.com/blog/understanding-aws-route-table-practical-guide
Understanding AWS Route Table: A Practical Guide

///////////////

What is a Route Table in AWS?
known as routes, that determines where network traffic is directed. Each subnet in your AWS Virtual Private Cloud (VPC) is associated with a route table that controls the traffic flow between subnets. A route table includes details like the Route Table ID and ‘The ID’ of its associated VPC.

The role of an AWS route table is to direct network traffic based on the destination IP address. Each route in the table specifies a destination (in the form of an IP address or CIDR block) and a target (like an internet gateway (IGW), network interface, or another route table). A local route is a special type of route that enables communication within the VPC.

///////////////////////////

AWS Route Tables and Security Groups: The Difference

Security groups, managed through IAM, act as firewalls for EC2 instances, whereas route tables control the routing of network traffic.

It’s critical to understand the difference between route table and Network Access Control Lists (NACL) in AWS, too. While a route table defines rules for routing network traffic, a NACL is a subnet-level firewall controlling traffic in and out of subnets.

////////////////////////

https://stackoverflow.com/questions/60211533/what-is-the-diference-between-network-acl-and-route-tables-in-aws

A Network Access Control List (Network ACL, or NACL) is a firewall for a subnet.

All traffic entering or exiting a subnet is checked against the NACL rules to determine whether the traffic is allowed in/out of the subnet.

Traffic between instances within the same subnet do not pass through a NACL because the traffic is not exiting the subnet.

NACL rules are executed in a defined order. The first rule that matches the traffic will determine whether the traffic is allowed or denied.

Typically, NACLs are left at their default value of permitting all traffic. You should never have a need to modify a NACL unless you have a specific need, such as:

-----------------

A Route Table is used to direct traffic in/out of a subnet. It contains a number of CIDRs (IP address ranges) and where to direct the appropriate traffic.

For example:

    Traffic for the Internet (0.0.0.0/0) is usually:
        Sent to an Internet Gateway if the Route Table is associated with a public subnet
        Sent to a NAT Gateway if the Route Table is associated with a private subnet
    Traffic for a Peered VPC is sent across a VPC Peering connection

It literally routes the traffic to the correct destination.

Want to know what makes a Public Subnet 'public'? It is the fact that the Route Table sends Internet-bound traffic to 0.0.0.0/0.

Traffic is sent to the smallest CIDR range that matches the destination. So, traffic matching 10.1.0.0/16 would be directed before traffic matching 0.0.0.0/0.

//////////////////////////
//////////////////////////

route table image
1>no port is involved
2>only has destination and target
3>Destination vs Target
Destination field specifies the pattern that a request must match with its destination address (IP or CIDR range).
Target field specifies where such a request should be routed

| destination | target  | status | propagation |
|0.0.0.0/16   | local   | Active | No          |  <-- default main route
|0.0.0.0/0    | igw-xyz | Active | No          |  <-- connect to igw

This will route any request with into-the-VPC destination to local targets in the VPC. If the pattern 10.0.0.0/16 is not met, the any-ipv4-address aka 0.0.0.0/0 will be considered and the request will be routed to the internet gateway you specified with ID your-igw-id.

//////////////////////////
//////////////////////////

NACL
port range is involved

NACL inbound
Source. [Inbound rules only] The source of the traffic (CIDR range)
https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
6 	TCP 	Transmission Control

| rule# | type        | protocol | port range | source    | allow/deny |
| 100   | http 80     | tcp 6    | 80         | 0.0.0.0/0 | allow |
| 200   | https 443   | tcp 6    | 443        | 0.0.0.0/0 | allow |
| 300   | ssh 22      | tcp 6    | 22         | 0.0.0.0/0 | allow |
| *     | all traffic | all      | all        | 0.0.0.0/0 | deny  |

NACL outbound
Destination. [Outbound rules only] The destination for the traffic (CIDR range).

| rule# | type        | protocol | port range | destination  | allow/deny |
| 100   | http 80     | tcp 6    | 80         | 0.0.0.0/0    | allow |
| 200   | https 443   | tcp 6    | 443        | 0.0.0.0/0    | allow |
| 300   | ssh 22      | tcp 6    | 22         | 0.0.0.0/16   | allow |
| *     | all traffic | all      | all        | 0.0.0.0/0    | deny  |

//////////////////////////
//////////////////////////

Security groups are stateful in nature. As a result, any changes applicable to an incoming rule will also be automatically applied to the outgoing rule in the same way. For example, allowing an incoming port 80 will automatically open the outgoing port 80

note : i wonder if that just mean, only can edit inbound, because outbound is toss out..

security group is stableful

security group inbound

0.0.0.0/0 is the IPv4 everything - all possible IPv4 addresses.
::/0 is the IPv6 equivalent

| type  | protocol | port range | source                  | description |
| ssh   | tcp      | 22         | anywhere 0.0.0.0/0 ::/0 | admin access |
| http  | tcp      | 80         | anywhere 0.0.0.0/0 ::/0 | web traffic |
| https | tcp      | 443        | anywhere 0.0.0.0/0 ::/0 | secured web traffic |

i dont seem to be able to find image with security group outbound
note : i wonder if that just mean, only can edit inbound, because outbound is toss out. forget outbound part...

another thing, i think one firewall at security group should be sufficient.  not quite
sure what they want to achieve with nacl???

nacl = feels like duplicated effort for diminishing return...  which in investment world is NO NO NO...

//////////////////////////
//////////////////////////















