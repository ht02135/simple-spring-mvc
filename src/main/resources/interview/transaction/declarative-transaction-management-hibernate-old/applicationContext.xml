<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- Enable annotation-driven dependency injection (@Autowired, @Service, @Repository, etc.) -->
    <context:component-scan base-package="com.example"/>

    <!-- Hibernate SessionFactory bean -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.example.model"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <!-- DataSource (configure for your DB) -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/yourdb"/>
        <property name="username" value="youruser"/>
        <property name="password" value="yourpassword"/>
    </bean>

    <!-- Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Enable @Transactional -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Explicit DAO bean definitions (not strictly needed with @Repository, but safe to keep) -->
    <bean id="userDAO" class="com.example.dao.HibernateUserDAO">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="invoiceDAO" class="com.example.dao.HibernateInvoiceDAO">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <!-- Service beans (can also be discovered by @Service) -->
    <bean id="userService" class="com.example.service.UserServiceImpl">
        <property name="userDAO" ref="userDAO"/>
    </bean>

    <bean id="invoiceService" class="com.example.service.InvoiceServiceImpl">
        <property name="invoiceDAO" ref="invoiceDAO"/>
    </bean>

</beans>
