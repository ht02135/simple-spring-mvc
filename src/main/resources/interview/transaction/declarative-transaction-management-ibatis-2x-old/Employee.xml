<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Employee">

    <!-- Result Maps -->
    <resultMap id="employeeResult" class="com.example.model.Employee">
        <result property="id" column="id" />
        <result property="first_name" column="first_name" />
        <result property="last_name" column="last_name" />
        <result property="salary" column="salary" />
        <result property="email" column="email" />
        <result property="gender" column="gender" />
    </resultMap>

    <!-- Basic CRUD Operations -->
    
    <!-- Insert Employee -->
    <insert id="insert" parameterClass="com.example.model.Employee">
        <selectKey keyProperty="id" resultClass="int" type="post">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO EMPLOYEE (first_name, last_name, salary)
        VALUES (#first_name#, #last_name#, #salary#)
    </insert>

    <!-- Insert Employee with all fields -->
    <insert id="insertFull" parameterClass="com.example.model.Employee">
        <selectKey keyProperty="id" resultClass="int" type="post">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO EMPLOYEE (first_name, last_name, salary, email, gender)
        VALUES (#first_name#, #last_name#, #salary#, #email#, #gender#)
    </insert>

    <!-- Select by ID -->
    <select id="findById" parameterClass="int" resultMap="employeeResult">
        SELECT id, first_name, last_name, salary, email, gender
        FROM EMPLOYEE
        WHERE id = #id#
    </select>

    <!-- Select All Employees -->
    <select id="findAll" resultMap="employeeResult">
        SELECT id, first_name, last_name, salary, email, gender
        FROM EMPLOYEE
        ORDER BY id
    </select>

    <!-- Update Employee -->
    <update id="update" parameterClass="com.example.model.Employee">
        UPDATE EMPLOYEE
        SET first_name = #first_name#,
            last_name = #last_name#,
            salary = #salary#,
            email = #email#,
            gender = #gender#
        WHERE id = #id#
    </update>

    <!-- Delete Employee -->
    <delete id="delete" parameterClass="int">
        DELETE FROM EMPLOYEE WHERE id = #id#
    </delete>

    <!-- Advanced Queries based on your reference methods -->

    <!-- Find by Email -->
    <select id="findByEmail" parameterClass="string" resultMap="employeeResult">
        SELECT id, first_name, last_name, salary, email, gender
        FROM EMPLOYEE
        WHERE email = #email#
    </select>

    <!-- Find by Gender and Name -->
    <select id="findByGenderAndName" parameterClass="map" resultMap="employeeResult">
        SELECT id, first_name, last_name, salary, email, gender
        FROM EMPLOYEE
        WHERE gender = #gender#
        AND first_name = #firstName#
        AND last_name = #lastName#
    </select>

    <!-- Count Employees by Gender -->
    <select id="countEmployeesByGender" resultClass="map">
        SELECT gender, COUNT(*) AS cnt
        FROM EMPLOYEE
        GROUP BY gender
        ORDER BY cnt DESC
    </select>

    <!-- Additional useful queries -->

    <!-- Find by Salary Range -->
    <select id="findBySalaryRange" parameterClass="map" resultMap="employeeResult">
        SELECT id, first_name, last_name, salary, email, gender
        FROM EMPLOYEE
        WHERE salary BETWEEN #minSalary# AND #maxSalary#
        ORDER BY salary DESC
    </select>

    <!-- Find by Last Name -->
    <select id="findByLastName" parameterClass="string" resultMap="employeeResult">
        SELECT id, first_name, last_name, salary, email, gender
        FROM EMPLOYEE
        WHERE last_name = #lastName#
        ORDER BY first_name
    </select>

    <!-- Get Total Employee Count -->
    <select id="getTotalEmployeeCount" resultClass="int">
        SELECT COUNT(*) FROM EMPLOYEE
    </select>

    <!-- Find Highest Paid Employee -->
    <select id="findHighestPaidEmployee" resultMap="employeeResult">
        SELECT id, first_name, last_name, salary, email, gender
        FROM EMPLOYEE
        WHERE salary = (SELECT MAX(salary) FROM EMPLOYEE)
        LIMIT 1
    </select>

    <!-- Dynamic SQL Examples -->

    <!-- Dynamic Select with conditions -->
    <select id="findEmployeesWithConditions" parameterClass="map" resultMap="employeeResult">
        SELECT id, first_name, last_name, salary, email, gender
        FROM EMPLOYEE
        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="id">
                id = #id#
            </isNotNull>
            <isNotNull prepend="AND" property="firstName">
                first_name = #firstName#
            </isNotNull>
            <isNotNull prepend="AND" property="lastName">
                last_name = #lastName#
            </isNotNull>
            <isNotNull prepend="AND" property="email">
                email = #email#
            </isNotNull>
            <isNotNull prepend="AND" property="gender">
                gender = #gender#
            </isNotNull>
            <isNotNull prepend="AND" property="minSalary">
                salary >= #minSalary#
            </isNotNull>
            <isNotNull prepend="AND" property="maxSalary">
                salary <= #maxSalary#
            </isNotNull>
        </dynamic>
        ORDER BY id
    </select>

    <!-- Dynamic Update -->
    <update id="updateSelective" parameterClass="com.example.model.Employee">
        UPDATE EMPLOYEE
        <dynamic prepend="SET">
            <isNotNull prepend="," property="first_name">
                first_name = #first_name#
            </isNotNull>
            <isNotNull prepend="," property="last_name">
                last_name = #last_name#
            </isNotNull>
            <isNotNull prepend="," property="salary">
                salary = #salary#
            </isNotNull>
            <isNotNull prepend="," property="email">
                email = #email#
            </isNotNull>
            <isNotNull prepend="," property="gender">
                gender = #gender#
            </isNotNull>
        </dynamic>
        WHERE id = #id#
    </update>

    <!-- Search employees by partial name match -->
    <select id="searchEmployeesByName" parameterClass="string" resultMap="employeeResult">
        SELECT id, first_name, last_name, salary, email, gender
        FROM EMPLOYEE
        WHERE CONCAT(first_name, ' ', last_name)