<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context.xsd">

	<!--  
	want a full example of Spring setup showing both XML-based configuration 
	and Java-based configuration, along with usage of the core annotations:
	@Autowired, @Qualifier, @Component, @Service, @Repository, @Controller.
	//////////////////////////
	<context:component-scan base-package="com.example"/>
	will scan @Autowired, @Qualifier, @Component, @Service, @Repository, @Controller.
	
	If you're using XML, you can enable annotation processing with the 
	<context:component-scan> element.
	<context:component-scan>: Add this element to your XML application context file, 
	specifying the base package to scan.
	-->
    <!-- Scan for components in package -->
    <context:component-scan base-package="com.example"/>

    <!-- Example: define a bean explicitly -->
    <bean id="specialRepository" class="com.example.repository.SpecialRepositoryImpl"/>
</beans>
