<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd">
           
    <!--
    Class	Primary Use
	JdbcTemplate	Executing general SQL queries and updates.
	NamedParameterJdbcTemplate	Executing SQL queries with named parameters.
	SimpleJdbcInsert	Simplifying INSERT statements.
	SimpleJdbcCall	Calling stored procedures and functions.
	SimpleJdbcTemplate	Deprecated; use JdbcTemplate instead.  
    -->

    <!-- Enable component scanning -->
    <context:component-scan base-package="com.example" />
    
    <!-- Property placeholder configuration -->
    <context:property-placeholder location="classpath:database.properties" />
    
    <!-- DataSource Configuration using HikariCP -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driver}" />
        <property name="jdbcUrl" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <property name="maximumPoolSize" value="10" />
        <property name="minimumIdle" value="2" />
        <property name="connectionTimeout" value="30000" />
        <property name="idleTimeout" value="600000" />
        <property name="maxLifetime" value="1800000" />
    </bean>
    
    <!-- Alternative H2 DataSource for testing -->
    <bean id="h2DataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="org.h2.Driver" />
        <property name="jdbcUrl" value="jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1" />
        <property name="username" value="sa" />
        <property name="password" value="" />
        <property name="maximumPoolSize" value="5" />
    </bean>
    
    <!-- JdbcTemplate Bean -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="h2DataSource" />
    </bean>
    
    <!-- NamedParameterJdbcTemplate Bean -->
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="h2DataSource" />
    </bean>
    
    <!-- SimpleJdbcInsert Bean -->
    <bean id="simpleJdbcInsert" class="org.springframework.jdbc.core.simple.SimpleJdbcInsert">
        <constructor-arg ref="h2DataSource" />
    </bean>
    
    <!-- SimpleJdbcCall Bean -->
    <bean id="simpleJdbcCall" class="org.springframework.jdbc.core.simple.SimpleJdbcCall">
        <constructor-arg ref="h2DataSource" />
    </bean>
    
    <!-- Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="h2DataSource" />
    </bean>
    
    <!-- Enable transaction annotations -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <!-- Database initialization script for H2 -->
    <bean id="databaseInitializer" class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
        <property name="dataSource" ref="h2DataSource" />
        <property name="databasePopulator">
            <bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
                <property name="scripts">
                    <list>
                        <value>classpath:schema.sql</value>
                        <value>classpath:data.sql</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>
</beans>